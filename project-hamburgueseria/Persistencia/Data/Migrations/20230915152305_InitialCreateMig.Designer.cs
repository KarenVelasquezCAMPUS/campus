// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230915152305_InitialCreateMig")]
    partial class InitialCreateMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Especialidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Chefs");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ChefId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ChefId");

                    b.ToTable("Hamburguesas");
                });

            modelBuilder.Entity("Dominio.Entities.HamburguesaIngrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HamburguesaFk")
                        .HasColumnType("longtext");

                    b.Property<int?>("HamburguesaId")
                        .HasColumnType("int");

                    b.Property<string>("IngredienteFk")
                        .HasColumnType("longtext");

                    b.Property<int?>("IngredienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HamburguesaId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("HamburguesaIngredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Precio")
                        .HasColumnType("longtext");

                    b.Property<string>("Stock")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("HamburguesaIngrediente", b =>
                {
                    b.Property<int>("HamburguesasId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientesId")
                        .HasColumnType("int");

                    b.HasKey("HamburguesasId", "IngredientesId");

                    b.HasIndex("IngredientesId");

                    b.ToTable("HamburguesaIngrediente");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.HasOne("Dominio.Entities.Categoria", null)
                        .WithMany("Hamburguesas")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Dominio.Entities.Chef", null)
                        .WithMany("Hamburguesas")
                        .HasForeignKey("ChefId");
                });

            modelBuilder.Entity("Dominio.Entities.HamburguesaIngrediente", b =>
                {
                    b.HasOne("Dominio.Entities.Hamburguesa", "Hamburguesa")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("HamburguesaId");

                    b.HasOne("Dominio.Entities.Ingrediente", "Ingrediente")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("IngredienteId");

                    b.Navigation("Hamburguesa");

                    b.Navigation("Ingrediente");
                });

            modelBuilder.Entity("HamburguesaIngrediente", b =>
                {
                    b.HasOne("Dominio.Entities.Hamburguesa", null)
                        .WithMany()
                        .HasForeignKey("HamburguesasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IngredientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Navigation("Hamburguesas");
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Navigation("Hamburguesas");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
